name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ragp-472304
  REGION: asia-northeast3
  BACKEND_SERVICE_NAME: rag-backend
  FRONTEND_SERVICE_NAME: rag-frontend
  REPOSITORY_NAME: cloud-run-source-deploy

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Configure Docker to use gcloud as a credential helper
      run: |
        gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

    - name: Enable required APIs
      run: |
        gcloud services enable cloudbuild.googleapis.com || true
        gcloud services enable run.googleapis.com || true
        gcloud services enable artifactregistry.googleapis.com || true

    - name: Create Artifact Registry repository
      run: |
        gcloud artifacts repositories create ${{ env.REPOSITORY_NAME }} \
          --repository-format=docker \
          --location=${{ env.REGION }} \
          --description="RAG Model Application" || true

    - name: Build and push backend image
      run: |
        cd backend
        echo "Building backend image directly with Docker..."
        docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.BACKEND_SERVICE_NAME }}:${{ github.sha }} .
        echo "Pushing backend image to registry..."
        docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.BACKEND_SERVICE_NAME }}:${{ github.sha }}

    - name: Deploy backend to Cloud Run
      run: |
        gcloud run deploy ${{ env.BACKEND_SERVICE_NAME }} \
          --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.BACKEND_SERVICE_NAME }}:${{ github.sha }} \
          --platform managed \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --memory 2Gi \
          --cpu 2 \
          --concurrency 80 \
          --max-instances 10 \
          --port 8080 \
          --set-env-vars "ENVIRONMENT=production" \
          --set-env-vars "OPENSEARCH_HOST=34.64.90.182" \
          --set-env-vars "OPENSEARCH_PORT=9200" \
          --set-env-vars "OPENSEARCH_USERNAME=admin" \
          --set-env-vars "OPENSEARCH_PASSWORD=admin" \
          --set-env-vars "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" \
          --timeout 300

    - name: Get backend URL
      id: backend
      run: |
        BACKEND_URL=$(gcloud run services describe ${{ env.BACKEND_SERVICE_NAME }} --region=${{ env.REGION }} --format="value(status.url)")
        echo "url=$BACKEND_URL" >> $GITHUB_OUTPUT
        echo "Backend URL: $BACKEND_URL"

    - name: Build and push frontend image
      run: |
        cd frontend
        
        # Create production environment file
        cat > .env.production << EOF
        REACT_APP_API_URL=${{ steps.backend.outputs.url }}
        GENERATE_SOURCEMAP=false
        EOF
        
        echo "Building frontend image directly with Docker..."
        docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.FRONTEND_SERVICE_NAME }}:${{ github.sha }} .
        echo "Pushing frontend image to registry..."
        docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.FRONTEND_SERVICE_NAME }}:${{ github.sha }}

    - name: Deploy frontend to Cloud Run
      run: |
        gcloud run deploy ${{ env.FRONTEND_SERVICE_NAME }} \
          --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.FRONTEND_SERVICE_NAME }}:${{ github.sha }} \
          --platform managed \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --memory 1Gi \
          --cpu 1 \
          --concurrency 100 \
          --max-instances 5 \
          --port 8080 \
          --set-env-vars "ENVIRONMENT=production" \
          --set-env-vars "REACT_APP_API_URL=${{ steps.backend.outputs.url }}" \
          --timeout 300

    - name: Get frontend URL
      id: frontend
      run: |
        FRONTEND_URL=$(gcloud run services describe ${{ env.FRONTEND_SERVICE_NAME }} --region=${{ env.REGION }} --format="value(status.url)")
        echo "url=$FRONTEND_URL" >> $GITHUB_OUTPUT
        echo "Frontend URL: $FRONTEND_URL"

    - name: Deployment Summary
      run: |
        echo "🎉 Deployment completed successfully!"
        echo ""
        echo "📋 Deployment Summary:"
        echo "Backend URL:  ${{ steps.backend.outputs.url }}"
        echo "Frontend URL: ${{ steps.frontend.outputs.url }}"
        echo ""
        echo "📝 Commit SHA: ${{ github.sha }}"
        echo "🌿 Branch: ${{ github.ref_name }}"